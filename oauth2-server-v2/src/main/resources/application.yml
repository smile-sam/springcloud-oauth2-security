spring:
  application:
    name: oauth2-server
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/auth?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=CONVERT_TO_NULL&allowPublicKeyRetrieval=true
    url: jdbc:mysql://localhost:3306/auth?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=CONVERT_TO_NULL&allowPublicKeyRetrieval=true
    username: dev
    password: Sam1028*
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 9
  #  redis:
#    database: 2
#    host: localhost
#    port: 6379
#    password:
#    jedis:
#      pool:
#        max-active: 8
#        max-idle: 8
#        min-idle: 0
#    timeout: 100ms
  jpa:
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: none
  redis:
    host: 127.0.0.1
    port: 6379
    lettuce:
      pool:
        max-wait: 100000
        max-idle: 10
        max-active: 100
    timeout: 5000
  main:
    allow-bean-definition-overriding: true
  resources:
    static-locations: classpath:/templates/,classpath:/static/
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    mode: HTML5
#    servlet:
#      content-type: text/html
#    cache: false



#    redis:
#      database: 0
#      # 集群设置 begin
#      cluster:
#        nodes:
#          - 10.217.17.70:7000
#          - 10.217.17.74:7000
#          - 10.217.17.75:7000
#        max-redirects: 3 # 获取失败 最大重定向次数
#      #集群设置 end
#      #单节点 begin
#      #    host: 10.217.17.74
#      #    port: 7000
#      #单节点 end
#      lettuce:
#        pool:
#          max-wait: 100000
#          max-idle: 10
#          max-active: 100
#      timeout: 5000

server:
  port: 8080

#management:
#  endpoint:
#    health:
#      enabled: true

#eureka:
#  instance:
#    hostname: localhost
#  client:
#    #    registerWithEureka: true
#    #    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka


logging:
  pattern:
    level: DEBUG
  level:
    org:
      springframework:
        security: DEBUG



auth-server-url: http://localhost:6001
security:
  oauth2:
    client:
      client-id: client
      client-secret: 123456
      scope: test
      access-token-uri: ${auth-server-url}/oauth/token
      user-authorization-uri: ${auth-server-url}/oauth/authorize
    resource:
      token-info-uri: ${auth-server-url}/oauth/check_token #检查令牌
